generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name              String?
  username          String?   @unique(map: "users_username_unique")
  email             String    @unique(map: "users_email_unique")
  bio               String?   @db.Text
  age               Int?
  wishlist          Json?
  is_superuser      Boolean   @default(false)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@map("users")
}

model Category {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @unique(map: "categories_name_unique")
  is_active  Boolean   @default(false)
  sort_order Int?
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  books      Book[]

  @@map("categories")
}

model Publisher {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @unique(map: "publishers_name_unique")
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  books      Book[]

  @@map("publishers")
}

model Author {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  first_name  String
  last_name   String
  description String    @db.LongText
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  books       AuthorBook[]

  @@map("authors")
}

model Translator {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  first_name  String
  last_name   String
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  books       BookTranslator[]

  @@map("translators")
}

model BookTranslator {
  book          Book         @relation(fields: [book_id], references: [id])
  book_id       BigInt
  translator    Translator   @relation(fields: [translator_id], references: [id])
  translator_id BigInt

  @@id([book_id, translator_id])
  @@map("book_translator")
}

model AuthorBook {
  author     Author @relation(fields: [author_id], references: [id])
  author_id  BigInt
  book       Book  @relation(fields: [book_id], references: [id])
  book_id    BigInt

  @@id([author_id, book_id])
  @@map("author_book")
}

model Book {
  id              BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  category        Category       @relation(fields: [category_id], references: [id])
  category_id     BigInt         @db.UnsignedBigInt
  publisher       Publisher      @relation(fields: [publisher_id], references: [id])
  publisher_id    BigInt         @db.UnsignedBigInt
  name            String
  picture         String
  description     String         @db.LongText
  price           Float?         @default(0.00)
  ISBN            String
  number_of_pages Int            @default(0)
  published_at    String?
  created_at      DateTime?      @db.Timestamp(0)
  updated_at      DateTime?      @db.Timestamp(0)

  @@index([category_id], map: "books_category_id_index")
  @@index([publisher_id], map: "books_publisher_id_index")

  authors        AuthorBook[]

  translators    BookTranslator[]

  @@map("books")
}


